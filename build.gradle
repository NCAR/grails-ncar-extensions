buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"

        // unused
        //classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.0.10"
    }
}

apply from:'application.gradle'
group "grails.ncar.extensions"

apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"org.grails.grails-gsp"

// unused
//apply plugin:"asset-pipeline"
//apply plugin:"eclipse"
//apply plugin:"idea"

// EOL maven remote repo
def internalMavenPublishUrl = 'file:////net/www_dev/data/html/maven2'
def internalMavenWebUrl = 'https://data.dev.eol.ucar.edu/maven2/'

repositories {
    mavenLocal()    // ~/.m2/
    maven { url internalMavenWebUrl }

    maven { url "https://repo.grails.org/grails/core" }
}

// make sure ALL tests & checks are run
install.dependsOn ':build'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:gsp"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"

    // unused, enable this & other asset lines if css/js/etc assets are added
    //runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.0.10"

    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.mockito:mockito-core"
    testCompile "org.grails:grails-web-testing-support"

    // removed grails-plugin-testing: https://github.com/grails/grails-core/issues/11293

    compile 'edu.ucar:groovy-ncar-extensions:3.1.0-SNAPSHOT'

}

bootRun {
    jvmArgs(
        '-Dspring.output.ansi.enabled=always', 
        '-noverify', 
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false

publishing {
    repositories {
        // DO NOT add mavenLocal() -- it will break all grails commands
        // to publish to mavenLocal (~/.m2/) use "grails install"

        maven { url internalMavenPublishUrl }
    }
}

grailsPublish {
    // grails.org plugin auth
    user = 'user'
    key = 'key'

    githubSlug = 'NCAR/grails-ncar-extensions'
    license {
        name = 'Apache-2.0'
    }
    title = "Grails NCAR extensions"
    desc = "Grails 4 extensions and utilities used at NCAR"
    developers = [jja:"John J. Allison"]
}

//assets {
//    packagePlugin = true
//}

// used by ./grailsShell
task printConsoleClasspath(dependsOn:'classes') {
    group = 'help'
    description = 'prints my console classpath (for use by an external script)'
    def files = sourceSets.main.runtimeClasspath + configurations.console
    doLast {
        print 'CLASSPATH '
        println files.asPath
    }
}
